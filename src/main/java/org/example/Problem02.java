package org.example;


/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms
 */
public class Problem02 {

    static int fibo(int n) {
        if (n == 0) {
            return 0;
        } else if (n == 1 || n == 2) {
            return 1;
        }
        return fibo(n - 1) + fibo(n - 2);
    }

    static int linearFobo() {

        var n1 = 0;
        var n2 = 1;
        int fibo = 0;
        int sum = 0;
        while (fibo < 4000000) {
            fibo = n1 + n2;
            sum += fibo % 2 == 0 ? fibo : 0;
            n1 = n2;
            n2 = fibo;
            System.out.println(fibo);
        }
        System.out.println("-----------");
        return sum;
    }

    public static void main(String[] args) {

        System.out.println(linearFobo());
    }
}